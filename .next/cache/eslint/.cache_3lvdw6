[{"/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/_app.js":"1","/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/api/hello.js":"2","/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/api/mongo.js":"3","/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/index.js":"4","/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/api/personalnfo.js":"5","/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/info.js":"6","/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/submit.js":"7","/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/lib/mongodb.js":"8","/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/404.js":"9","/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/about.js":"10","/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/dashboard.js":"11","/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/ninjas/ninja.js":"12","/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/components/Footer.js":"13","/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/components/Layout.js":"14","/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/components/Navbar.js":"15"},{"size":226,"mtime":1644161862907,"results":"16","hashOfConfig":"17"},{"size":170,"mtime":1643553975701,"results":"18","hashOfConfig":"17"},{"size":281,"mtime":1643529904167,"results":"19","hashOfConfig":"17"},{"size":198,"mtime":1644161817200,"results":"20","hashOfConfig":"17"},{"size":2543,"mtime":1643553682005,"results":"21","hashOfConfig":"17"},{"size":2861,"mtime":1644161449242,"results":"22","hashOfConfig":"17"},{"size":6023,"mtime":1643565914273,"results":"23","hashOfConfig":"17"},{"size":1040,"mtime":1643487981823,"results":"24","hashOfConfig":"17"},{"size":1288,"mtime":1644164227436,"results":"25","hashOfConfig":"17"},{"size":827,"mtime":1644079923467,"results":"26","hashOfConfig":"17"},{"size":1740,"mtime":1644163301752,"results":"27","hashOfConfig":"17"},{"size":128,"mtime":1644080196582,"results":"28","hashOfConfig":"17"},{"size":1027,"mtime":1644164022065,"results":"29","hashOfConfig":"17"},{"size":195,"mtime":1644161869662,"results":"30","hashOfConfig":"17"},{"size":8805,"mtime":1644162209692,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xiv6kc",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},"/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/_app.js",[],[],"/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/api/hello.js",[],[],"/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/api/mongo.js",["79"],[],"import { connectToDatabase } from \"../../lib/mongodb\";\n\nexport default async (req, res) => {\n  const { db } = await connectToDatabase();\n\n  const movies = await db\n    .collection(\"studio\")\n    .find({})\n    .limit(20)\n    .toArray();\n  console.log(movies);\n  res.json(movies);\n};\n","/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/index.js",[],[],"/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/api/personalnfo.js",[],[],"/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/info.js",[],[],"/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/submit.js",[],[],"/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/lib/mongodb.js",[],[],"/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/404.js",[],[],"/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/about.js",[],[],"/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/dashboard.js",[],[],"/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/pages/ninjas/ninja.js",[],[],"/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/components/Footer.js",[],[],"/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/components/Layout.js",[],[],"/Users/prashhanthsoujanya/Desktop/CodeSpace/ui/profile/components/Navbar.js",["80","81","82"],[],"/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\nimport { BellIcon, MenuIcon, XIcon } from '@heroicons/react/outline'\n\nconst user = {\n  name: 'Tom Cook',\n  email: 'tom@example.com',\n  imageUrl:\n    'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',\n}\nconst navigation = [\n  { name: 'Dashboard', href: '/dashboard', current: true },\n  { name: 'Info', href: '/info', current: false },\n  { name: 'Projects', href: '#', current: false },\n  { name: 'Forms', href: '/submit', current: false },\n]\nconst userNavigation = [\n  { name: 'Your Profile', href: '#' },\n  { name: 'Settings', href: '#' },\n  { name: 'Sign out', href: '#' },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function Example() {\n  return (\n    <>\n      {/*\n        This example requires updating your template:\n\n        ```\n        <html class=\"h-full bg-gray-100\">\n        <body class=\"h-full\">\n        ```\n      */}\n      <div className=\"min-h-full\">\n        <Disclosure as=\"nav\" className=\"bg-gray-800\">\n          {({ open }) => (\n            <>\n              <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                <div className=\"flex items-center justify-between h-16\">\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-shrink-0\">\n                      <img\n                        className=\"h-8 w-8\"\n                        src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\n                        alt=\"Workflow\"\n                      />\n                    </div>\n                    <div className=\"hidden md:block\">\n                      <div className=\"ml-10 flex items-baseline space-x-4\">\n                        {navigation.map((item) => (\n                          <a\n                            key={item.name}\n                            href={item.href}\n                            className={classNames(\n                              item.current\n                                ? 'bg-gray-900 text-white'\n                                : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                              'px-3 py-2 rounded-md text-sm font-medium'\n                            )}\n                            aria-current={item.current ? 'page' : undefined}\n                          >\n                            {item.name}\n                          </a>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"hidden md:block\">\n                    <div className=\"ml-4 flex items-center md:ml-6\">\n                      <button\n                        type=\"button\"\n                        className=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\"\n                      >\n                        <span className=\"sr-only\">View notifications</span>\n                        <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                      </button>\n\n                      {/* Profile dropdown */}\n                      <Menu as=\"div\" className=\"ml-3 relative\">\n                        <div>\n                          <Menu.Button className=\"max-w-xs bg-gray-800 rounded-full flex items-center text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                            <span className=\"sr-only\">Open user menu</span>\n                            <img className=\"h-8 w-8 rounded-full\" src={user.imageUrl} alt=\"\" />\n                          </Menu.Button>\n                        </div>\n                        <Transition\n                          as={Fragment}\n                          enter=\"transition ease-out duration-100\"\n                          enterFrom=\"transform opacity-0 scale-95\"\n                          enterTo=\"transform opacity-100 scale-100\"\n                          leave=\"transition ease-in duration-75\"\n                          leaveFrom=\"transform opacity-100 scale-100\"\n                          leaveTo=\"transform opacity-0 scale-95\"\n                        >\n                          <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                            {userNavigation.map((item) => (\n                              <Menu.Item key={item.name}>\n                                {({ active }) => (\n                                  <a\n                                    href={item.href}\n                                    className={classNames(\n                                      active ? 'bg-gray-100' : '',\n                                      'block px-4 py-2 text-sm text-gray-700'\n                                    )}\n                                  >\n                                    {item.name}\n                                  </a>\n                                )}\n                              </Menu.Item>\n                            ))}\n                          </Menu.Items>\n                        </Transition>\n                      </Menu>\n                    </div>\n                  </div>\n                  <div className=\"-mr-2 flex md:hidden\">\n                    {/* Mobile menu button */}\n                    <Disclosure.Button className=\"bg-gray-800 inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                      <span className=\"sr-only\">Open main menu</span>\n                      {open ? (\n                        <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                      ) : (\n                        <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                      )}\n                    </Disclosure.Button>\n                  </div>\n                </div>\n              </div>\n\n              <Disclosure.Panel className=\"md:hidden\">\n                <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\n                  {navigation.map((item) => (\n                    <Disclosure.Button\n                      key={item.name}\n                      as=\"a\"\n                      href={item.href}\n                      className={classNames(\n                        item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                        'block px-3 py-2 rounded-md text-base font-medium'\n                      )}\n                      aria-current={item.current ? 'page' : undefined}\n                    >\n                      {item.name}\n                    </Disclosure.Button>\n                  ))}\n                </div>\n                <div className=\"pt-4 pb-3 border-t border-gray-700\">\n                  <div className=\"flex items-center px-5\">\n                    <div className=\"flex-shrink-0\">\n                      <img className=\"h-10 w-10 rounded-full\" src={user.imageUrl} alt=\"\" />\n                    </div>\n                    <div className=\"ml-3\">\n                      <div className=\"text-base font-medium leading-none text-white\">{user.name}</div>\n                      <div className=\"text-sm font-medium leading-none text-gray-400\">{user.email}</div>\n                    </div>\n                    <button\n                      type=\"button\"\n                      className=\"ml-auto bg-gray-800 flex-shrink-0 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\"\n                    >\n                      <span className=\"sr-only\">View notifications</span>\n                      <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n                  <div className=\"mt-3 px-2 space-y-1\">\n                    {userNavigation.map((item) => (\n                      <Disclosure.Button\n                        key={item.name}\n                        as=\"a\"\n                        href={item.href}\n                        className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-400 hover:text-white hover:bg-gray-700\"\n                      >\n                        {item.name}\n                      </Disclosure.Button>\n                    ))}\n                  </div>\n                </div>\n              </Disclosure.Panel>\n            </>\n          )}\n        </Disclosure>\n      </div>\n    </>\n  )\n}\n",{"ruleId":"83","severity":1,"message":"84","line":3,"column":1,"nodeType":"85","endLine":13,"endColumn":3},{"ruleId":"86","severity":1,"message":"87","line":47,"column":23,"nodeType":"88","endLine":51,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":88,"column":29,"nodeType":"88","endLine":88,"endColumn":96},{"ruleId":"86","severity":1,"message":"87","line":155,"column":23,"nodeType":"88","endLine":155,"endColumn":92},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement"]